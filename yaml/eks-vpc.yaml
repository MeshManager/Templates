AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to create VPC with public subnets in Seoul region for EKS
Parameters:
  Region:
    Type: String
    Default: ap-northeast-2
    Description: AWS Seoul Region

Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: '10.10.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: mesh-manager-vpc

  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: mesh-manager-igw

  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: mesh-manager-rtb-public

  PublicRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.0.0/20'
      AvailabilityZone: !Sub '${Region}a'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mesh-manager-subnet-public1-ap-northeast-2a
        - Key: kubernetes.io/role/elb
          Value: 1

  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.16.0/20'
      AvailabilityZone: !Sub '${Region}b'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mesh-manager-subnet-public2-ap-northeast-2b
        - Key: kubernetes.io/role/elb
          Value: 1

  PublicSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.32.0/20'
      AvailabilityZone: !Sub '${Region}c'
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: mesh-manager-subnet-public3-ap-northeast-2c
        - Key: kubernetes.io/role/elb
          Value: 1

  PublicSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PublicSubnet3
      RouteTableId: !Ref PublicRouteTable

  NAT1EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NAT-EIP-1

  NAT2EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NAT-EIP-2

  NAT3EIP:
    Type: 'AWS::EC2::EIP'
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: NAT-EIP-3

  NATGateway1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NAT1EIP.AllocationId
      SubnetId: !Ref PublicSubnet1
      Tags:
        - Key: Name
          Value: NAT-GW-AZ2a

  NATGateway2:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NAT2EIP.AllocationId
      SubnetId: !Ref PublicSubnet2
      Tags:
        - Key: Name
          Value: NAT-GW-AZ2b

  NATGateway3:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      AllocationId: !GetAtt NAT3EIP.AllocationId
      SubnetId: !Ref PublicSubnet3
      Tags:
        - Key: Name
          Value: NAT-GW-AZ2c

  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.48.0/20'
      AvailabilityZone: !Sub '${Region}a'
      Tags:
        - Key: Name
          Value: eks-subnet-private1-ap-northeast-2a
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.64.0/20'
      AvailabilityZone: !Sub '${Region}b'
      Tags:
        - Key: Name
          Value: eks-subnet-private2-ap-northeast-2b
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateSubnet3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.80.0/20'
      AvailabilityZone: !Sub '${Region}c'
      Tags:
        - Key: Name
          Value: eks-subnet-private3-ap-northeast-2c
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateRouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: eks-rtb-private-2a

  PrivateRouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: eks-rtb-private-2b

  PrivateRouteTable3:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: eks-rtb-private-2c

  PrivateRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable1
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway1

  PrivateRoute2:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable2
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway2

  PrivateRoute3:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref PrivateRouteTable3
      DestinationCidrBlock: '0.0.0.0/0'
      NatGatewayId: !Ref NATGateway3

  PrivateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateSubnet3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnet3
      RouteTableId: !Ref PrivateRouteTable3

  PrivateSubnetDB1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.96.0/20'
      AvailabilityZone: !Sub '${Region}a'
      Tags:
        - Key: Name
          Value: eks-subnet-privatedb1-ap-northeast-2a
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateSubnetDB2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.112.0/20'
      AvailabilityZone: !Sub '${Region}b'
      Tags:
        - Key: Name
          Value: eks-subnet-privatedb2-ap-northeast-2b
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateSubnetDB3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: '10.10.128.0/20'
      AvailabilityZone: !Sub '${Region}c'
      Tags:
        - Key: Name
          Value: eks-subnet-privatedb3-ap-northeast-2c
        - Key: kubernetes.io/role/internal-elb
          Value: 1

  PrivateSubnetDB1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetDB1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateSubnetDB2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetDB2
      RouteTableId: !Ref PrivateRouteTable2

  PrivateSubnetDB3RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref PrivateSubnetDB3
      RouteTableId: !Ref PrivateRouteTable3

Outputs:
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
    Export:
      Name: !Sub '${AWS::StackName}-VPCID'

  PublicSubnet1Id:
    Description: 'Public Subnet 1 (AZ-a) ID'
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetAZA'

  PublicSubnet2Id:
    Description: 'Public Subnet 2 (AZ-b) ID'
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetAZB'

  PublicSubnet3Id:
    Description: 'Public Subnet 3 (AZ-c) ID'
    Value: !Ref PublicSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PublicSubnetAZC'

  PrivateSubnet1Id:
    Description: 'Private Subnet 1 (AZ-a) ID'
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetAZA'

  PrivateSubnet2Id:
    Description: 'Private Subnet 2 (AZ-b) ID'
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetAZB'

  PrivateSubnet3Id:
    Description: 'Private Subnet 3 (AZ-c) ID'
    Value: !Ref PrivateSubnet3
    Export:
      Name: !Sub '${AWS::StackName}-PrivateSubnetAZC'

  PrivateSubnetDB1Id:
    Description: 'Private DB Subnet 1 (AZ-a) ID'
    Value: !Ref PrivateSubnetDB1
    Export:
      Name: !Sub '${AWS::StackName}-PrivateDBSubnetAZA'

  PrivateSubnetDB2Id:
    Description: 'Private DB Subnet 2 (AZ-b) ID'
    Value: !Ref PrivateSubnetDB2
    Export:
      Name: !Sub '${AWS::StackName}-PrivateDBSubnetAZB'

  PrivateSubnetDB3Id:
    Description: 'Private DB Subnet 3 (AZ-c) ID'
    Value: !Ref PrivateSubnetDB3
    Export:
      Name: !Sub '${AWS::StackName}-PrivateDBSubnetAZC'

  NATGateway1Id:
    Description: 'NAT Gateway 1 ID'
    Value: !Ref NATGateway1
    Export:
      Name: !Sub '${AWS::StackName}-NATGatewayAZA'

  NATGateway2Id:
    Description: 'NAT Gateway 2 ID'
    Value: !Ref NATGateway2
    Export:
      Name: !Sub '${AWS::StackName}-NATGatewayAZB'

  NATGateway3Id:
    Description: 'NAT Gateway 3 ID'
    Value: !Ref NATGateway3
    Export:
      Name: !Sub '${AWS::StackName}-NATGatewayAZC'

  PublicRouteTableId:
    Description: 'Public Route Table ID'
    Value: !Ref PublicRouteTable

  PrivateRouteTable1Id:
    Description: 'Private Route Table 1 ID'
    Value: !Ref PrivateRouteTable1
